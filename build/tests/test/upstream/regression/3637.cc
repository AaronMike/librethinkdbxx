// auto-generated by yaml_to_cxx.py from test/upstream/regression/3637.yaml
#include "testlib.h"
void test_upstream_regression_3637() {
    enter_section("test_upstream_regression_3637: Test that negative zero and positive zero refer to the same row");
    temp_table tbl_table;
    R::Query tbl = tbl_table.table();
    TEST_EQ(tbl.insert(R::array(R::object("id", 0.0, "value", "abc"), R::object("id", R::array(1, -0.0), "value", "def"))).run(*conn), (partial(R::Object{{"inserted",2}})));
    TEST_EQ(tbl.get(0.0).run(*conn), (R::Object{{"value","abc"}, {"id",0.0}}));
    TEST_EQ(tbl.get(-0.0).run(*conn), (R::Object{{"value","abc"}, {"id",0.0}}));
    TEST_EQ(tbl.get(R::array(1, 0.0)).run(*conn), (R::Object{{"value","def"}, {"id",R::Array{1, -0.0}}}));
    TEST_EQ(tbl.get(R::array(1, -0.0)).run(*conn), (R::Object{{"value","def"}, {"id",R::Array{1, -0.0}}}));
    TEST_EQ(tbl.get(0.0).pluck("id").to_json_string().run(*conn), ("{\"id\":0}"));
    TEST_EQ(tbl.get(-0.0).pluck("id").to_json_string().run(*conn), ("{\"id\":0}"));
    TEST_EQ(tbl.get(R::array(1, 0.0)).pluck("id").to_json_string().run(*conn), ("{\"id\":[1,-0.0]}"));
    TEST_EQ(tbl.get(R::array(1, -0.0)).pluck("id").to_json_string().run(*conn), ("{\"id\":[1,-0.0]}"));
    TEST_EQ(tbl.insert(R::object("id", 0.0)).run(*conn), (partial(R::Object{{"errors",1}})));
    TEST_EQ(tbl.insert(R::object("id", R::array(1, 0.0))).run(*conn), (partial(R::Object{{"errors",1}})));
    TEST_EQ(tbl.insert(R::object("id", -0.0)).run(*conn), (partial(R::Object{{"errors",1}})));
    TEST_EQ(tbl.insert(R::object("id", R::array(1, -0.0))).run(*conn), (partial(R::Object{{"errors",1}})));
    exit_section();
}
