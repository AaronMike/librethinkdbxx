// auto-generated by yaml_to_cxx.py from test/upstream/geo/primitives.yaml
#include "testlib.h"
void test_upstream_geo_primitives() {
    enter_section("test_upstream_geo_primitives: Test geometric primitive constructors");
    TEST_EQ(R::circle(R::array(0, 0), 1, R::OptArgs{{"num_vertices", R::expr(3)}}).run(*conn), (R::Object{{"$reql_type$","GEOMETRY"}, {"coordinates",R::Array{R::Array{R::Array{0, -9.04369477050382e-06}, R::Array{-7.779638566553426e-06, 4.5218473852518965e-06}, R::Array{7.779638566553426e-06, 4.5218473852518965e-06}, R::Array{0, -9.04369477050382e-06}}}}, {"type","Polygon"}}));
    TEST_EQ(R::circle(R::point(0, 0), 1, R::OptArgs{{"num_vertices", R::expr(3)}}).run(*conn), (R::Object{{"$reql_type$","GEOMETRY"}, {"coordinates",R::Array{R::Array{R::Array{0, -9.04369477050382e-06}, R::Array{-7.779638566553426e-06, 4.5218473852518965e-06}, R::Array{7.779638566553426e-06, 4.5218473852518965e-06}, R::Array{0, -9.04369477050382e-06}}}}, {"type","Polygon"}}));
    TEST_EQ(R::circle(R::array(0, 0), 1, R::OptArgs{{"num_vertices", R::expr(3)}, {"fill", R::expr(false)}}).run(*conn), (R::Object{{"$reql_type$","GEOMETRY"}, {"coordinates",R::Array{R::Array{0, -9.04369477050382e-06}, R::Array{-7.779638566553426e-06, 4.5218473852518965e-06}, R::Array{7.779638566553426e-06, 4.5218473852518965e-06}, R::Array{0, -9.04369477050382e-06}}}, {"type","LineString"}}));
    TEST_EQ(R::circle(R::array(0, 0), 14000000, R::OptArgs{{"num_vertices", R::expr(3)}}).run(*conn), (err("RqlRuntimeError", "Radius must be smaller than a quarter of the circumference along the minor axis of the reference ellipsoid.  Got 14000000m, but must be smaller than 9985163.1855612862855m.", R::Array{0})));
    TEST_EQ(R::circle(R::array(0, 0), 1, R::OptArgs{{"num_vertices", R::expr(3)}, {"geo_system", R::expr("WGS84")}}).run(*conn), (R::Object{{"$reql_type$","GEOMETRY"}, {"coordinates",R::Array{R::Array{R::Array{0, -9.04369477050382e-06}, R::Array{-7.779638566553426e-06, 4.5218473852518965e-06}, R::Array{7.779638566553426e-06, 4.5218473852518965e-06}, R::Array{0, -9.04369477050382e-06}}}}, {"type","Polygon"}}));
    TEST_EQ(R::circle(R::array(0, 0), 2, R::OptArgs{{"num_vertices", R::expr(3)}, {"geo_system", R::expr("unit_sphere")}}).run(*conn), (err("RqlRuntimeError", "Radius must be smaller than a quarter of the circumference along the minor axis of the reference ellipsoid.  Got 2m, but must be smaller than 1.570796326794896558m.", R::Array{0})));
    TEST_EQ(R::circle(R::array(0, 0), 0.1, R::OptArgs{{"num_vertices", R::expr(3)}, {"geo_system", R::expr("unit_sphere")}}).run(*conn), (R::Object{{"$reql_type$","GEOMETRY"}, {"coordinates",R::Array{R::Array{R::Array{0, -5.729577951308232}, R::Array{-4.966092947444857, 2.861205754495701}, R::Array{4.966092947444857, 2.861205754495701}, R::Array{0, -5.729577951308232}}}}, {"type","Polygon"}}));
    TEST_EQ(R::circle(R::array(0, 0), R::expr(1.0) / 1000.0, R::OptArgs{{"num_vertices", R::expr(3)}, {"unit", R::expr("km")}}).run(*conn), (R::Object{{"$reql_type$","GEOMETRY"}, {"coordinates",R::Array{R::Array{R::Array{0, -9.04369477050382e-06}, R::Array{-7.779638566553426e-06, 4.5218473852518965e-06}, R::Array{7.779638566553426e-06, 4.5218473852518965e-06}, R::Array{0, -9.04369477050382e-06}}}}, {"type","Polygon"}}));
    TEST_EQ(R::circle(R::array(0, 0), R::expr(1.0) / 1609.344, R::OptArgs{{"num_vertices", R::expr(3)}, {"unit", R::expr("mi")}}).run(*conn), (R::Object{{"$reql_type$","GEOMETRY"}, {"coordinates",R::Array{R::Array{R::Array{0, -9.04369477050382e-06}, R::Array{-7.779638566553426e-06, 4.5218473852518965e-06}, R::Array{7.779638566553426e-06, 4.5218473852518965e-06}, R::Array{0, -9.04369477050382e-06}}}}, {"type","Polygon"}}));
}
