// auto-generated by yaml_to_cxx.py from test/upstream/math_logic/aliases.yaml
#include "testlib.h"
void test_upstream_math_logic_aliases() {
    enter_section("test_upstream_math_logic_aliases: Test named aliases for math and logic operators");
    TEST_EQ(R::expr(0).add(1).run(*conn), (1));
    TEST_EQ(R::add(0, 1).run(*conn), (1));
    TEST_EQ(R::expr(2).sub(1).run(*conn), (1));
    TEST_EQ(R::sub(2, 1).run(*conn), (1));
    TEST_EQ(R::expr(2).div(2).run(*conn), (1));
    TEST_EQ(R::div(2, 2).run(*conn), (1));
    TEST_EQ(R::expr(1).mul(1).run(*conn), (1));
    TEST_EQ(R::mul(1, 1).run(*conn), (1));
    TEST_EQ(R::expr(1).mod(2).run(*conn), (1));
    TEST_EQ(R::mod(1, 2).run(*conn), (1));
    TEST_EQ(R::expr(true).and_(true).run(*conn), (true));
    TEST_EQ(R::expr(true).or_(true).run(*conn), (true));
    TEST_EQ(R::and_(true, true).run(*conn), (true));
    TEST_EQ(R::or_(true, true).run(*conn), (true));
    TEST_EQ(R::expr(false).not_().run(*conn), (true));
    TEST_EQ(R::not_(false).run(*conn), (true));
    TEST_EQ(R::expr(1).eq(1).run(*conn), (true));
    TEST_EQ(R::expr(1).ne(2).run(*conn), (true));
    TEST_EQ(R::expr(1).lt(2).run(*conn), (true));
    TEST_EQ(R::expr(1).gt(0).run(*conn), (true));
    TEST_EQ(R::expr(1).le(1).run(*conn), (true));
    TEST_EQ(R::expr(1).ge(1).run(*conn), (true));
    TEST_EQ(R::eq(1, 1).run(*conn), (true));
    TEST_EQ(R::ne(1, 2).run(*conn), (true));
    TEST_EQ(R::lt(1, 2).run(*conn), (true));
    TEST_EQ(R::gt(1, 0).run(*conn), (true));
    TEST_EQ(R::le(1, 1).run(*conn), (true));
    TEST_EQ(R::ge(1, 1).run(*conn), (true));
    exit_section();
}
