// auto-generated by yaml_to_cxx.py from test/upstream/times/portions.yaml
#include "testlib.h"
void test_upstream_times_portions() {
    enter_section("test_upstream_times_portions: accessing portions");
    auto rt1 = 1375147296.681;
    auto rt2 = 1375147296.682;
    auto rt3 = 1375147297.681;
    auto rt4 = 2375147296.681;
    auto rts = R::Array{rt1, rt2, rt3, rt4};
    auto t1 = R::epoch_time(rt1);
    auto t2 = R::epoch_time(rt2);
    auto t3 = R::epoch_time(rt3);
    auto t4 = R::epoch_time(rt4);
    auto ts = R::expr(R::array(t1, t2, t3, t4));
    TEST_EQ(ts.map([=](R::Var x){ return (*x).date(); }).map([=](R::Var x){ return (*x).to_epoch_time(); }).run(*conn), (R::Array{1375142400, 1375142400, 1375142400, 2375136000}));
    TEST_EQ(ts.map([=](R::Var x){ return (*x).date().time_of_day(); }).run(*conn), (R::Array{0, 0, 0, 0}));
    TEST_EQ(ts.map([=](R::Var x){ return (*x).time_of_day(); }).run(*conn), (R::Array{4896.681, 4896.682, 4897.681, 11296.681}));
    TEST_EQ(ts.map([=](R::Var x){ return R::array((*x).year(), (*x).month(), (*x).day(), (*x).hours(), (*x).minutes(), (*x).seconds()); }).run(*conn), (R::Array{R::Array{2013, 7, 30, 1, 21, 36.681}, R::Array{2013, 7, 30, 1, 21, 36.682}, R::Array{2013, 7, 30, 1, 21, 37.681}, R::Array{2045, 4, 7, 3, 8, 16.681}}));
    TEST_EQ(ts.map([=](R::Var x){ return R::time((*x).year(), (*x).month(), (*x).day(), (*x).hours(), (*x).minutes(), (*x).seconds(), (*x).timezone()); }).map([=](R::Var x){ return (*x).to_epoch_time(); }).run(*conn), (rts));
    TEST_EQ(ts.map([=](R::Var x){ return R::time((*x).year(), (*x).month(), (*x).day(), (*x).hours(), (*x).minutes(), (*x).seconds(), (*x).timezone()); }).union_(ts).map([=](R::Var x){ return (*x).to_iso8601(); }).distinct().count().sub(ts.count()).run(*conn), (0));
    TEST_EQ(ts.map(R::array(R::row.day_of_week(), R::row.day_of_year())).run(*conn), (R::Array{R::Array{2, 211}, R::Array{2, 211}, R::Array{2, 211}, R::Array{5, 97}}));
}
